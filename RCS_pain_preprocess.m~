% This is the first attempt at preprocessing RC+S data using the new deserialization pipeline
% This will create combined MAT files for all recording sessions and create
% a database index of all files
% 
% MUST USE MATLAB 2019a or earlier (given JSON issue) 
% 
% Prasad Shirvalkar Nov 11, 2020
 
clear
clc

PATIENTID = 'RCS02R'
% 'CPRCS01';

% define locations of JSON file inputs,  MAT file outputs 
% loaddir = '/Volumes/Prasad_X5/RCS02/SummitData/SummitContinuousBilateralStreaming/RCS02R/Session1605741783275/DeviceNPC700457H';
rootdir = ['/Volumes/Prasad_X5/' PATIENTID(1:end-1)];
loaddir = [rootdir '/SummitData/SummitContinuousBilateralStreaming/' PATIENTID];
github_dir = '/Users/pshirvalkar/Documents/GitHub/UCSF-rcs-data-analysis';

cd(github_dir)
addpath(genpath(github_dir))

%% make database of all files

T= getDataBaseRCSdata(loaddir);
writetable(T,fullfile(rootdir,'database_summary.csv'))
save(fullfile(rootdir,'database_summary.mat'),'T')

 %% Process and load all data
 
dirsdata = findFilesBVQX(dirname,'Sess*',struct('dirs',1,'depth',1));

% find out if a database file was already created in this folder
% if so, just an update is needed no need to recrate the whole
% database

% extract times and .mat status
dbout = [];
for d = 1:length(dirsdata)
    diruse = findFilesBVQX(dirsdata{d},'Device*',struct('dirs',1,'depth',1));
    
    fprintf('Reading folder %d of %d  \n',d,length(dirsdata))
    if isempty(diruse) % no data exists inside
        
        dbout(d).rectime = [];
        dbout(d).matExist  = 0;
        dbout(d).fnm     = [];
        [pn,fn] = fileparts(dirsdata{d});
        dbout(d).sessname = fn;
    else % data may exist, check for time domain ndata
        
        
        
        
[combinedDataTable, debugTable, timeDomainSettings,powerSettings,...
    fftSettings,eventLogTable, metaData,stimSettingsOut,stimMetaData,stimLogSettings,...
    DetectorSettings,AdaptiveStimSettings,AdaptiveRuns_StimSettings] = DEMO_ProcessRCS(loaddir)


%%  Check if mat file exists, if not, load raw data and save to new matfile

for j = 1:length(filesLoad)
    if ismac || isunix
        ff = findFilesBVQX(rootdir,filesLoad{j});
    elseif ispc
        ff = {fullfile(rootdir,filesLoad{j})};
    end
    
    
    
    
    
end







%%   Kurtosis find periods of stim

close all
winsize = 3000
noverlap = 0.1
d = data.key1;
  
k = movwin(d,winsize,noverlap,@kurtosis);
plot(linspace(1,numel(k),numel(d)),d)
hold on 
plot(k)
%find periods of stimulation
[p,l]= findpeaks(k,'threshold',0.5,'MinPeakProminence',3)